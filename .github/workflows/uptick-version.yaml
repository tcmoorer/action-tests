# This is a basic workflow that is manually triggered

name: Uptick Version Workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      oldVersion:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Current Release Version Id'
        # Input has to be provided for the workflow to run
        required: true
      newVersion:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Next Release Version Id'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "create-branch"
  uptick-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: 1. Check out code
      uses: actions/checkout@v2
    - name: 2. Create uptick branch from development
      run: git checkout -b uptick-${{ github.event.inputs.versionName }} development
    #- name: Uptick oldValue to newValue in pom.xml files
    #  run: |
    #    sed -i 's/${{ github.event.inputs.oldVersion }}/${{ github.event.inputs.newVersion }}/g' pom.xml
    - name: 3. Find and Replace oldValue with newValue in pom.xml files
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: ${{ github.event.inputs.oldVersion }}
        replace: ${{ github.event.inputs.newVersion }}
        include: "**pom.xml" 
    - name: 4. Commit and push uptick branch
      run: |
        git commit -m 'Uptick repo from ${{ github.event.inputs.oldVersion }} to ${{ github.event.inputs.newVersion }}'
        git push origin uptick-${{ github.event.inputs.versionName }}
    #- name: Push changes
    #  uses: ad-m/github-push-action@v0.6.0
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}
    #    branch: ${{ github.ref }}

