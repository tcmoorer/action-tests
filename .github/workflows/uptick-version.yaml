# This is a basic workflow that is manually triggered

name: Uptick Version Workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      pomFromVersion:
        description: 'Current pom.xml version'
        required: true
      pomToVersion:
        description: 'New pom.xml version'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "create-branch"
  uptick-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: 1. Check out code
      uses: actions/checkout@v2
    - name: 2. Create uptick branch from development
      run: git checkout -b uptick-${{ github.event.inputs.newVersion }} development
    - name: 3. Find and Replace oldValue with newValue in pom.xml files
      run: |
        find . -type f -name "pom.xml" -exec sed -i 's/<version>${{ github.event.inputs.pomFromVersion }}-SNAPSHOT</version>/<version>${{ github.event.inputs.pomToVersion }}-SNAPSHOT</version>/g' {} +
    - name: 4. Commit and push uptick branch
      run: |
        git config user.name 'Robot User'
        git config user.email 'robot@users.noreply.github.com'
        git commit -am 'Uptick repo from ${{ github.event.inputs.pomFromVersion }} to ${{ github.event.inputs.pomToVersion }}'
        git push origin uptick-${{ github.event.inputs.pomToVersion }}
    - name: 5. Create pull request to develop
      uses: thomaseizinger/create-pull-request@1.0.0
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: uptick-${{ github.event.inputs.pomToVersion }}
          base: development
          title: ${{ github.event.inputs.pomToVersion }} into development
          reviewers: ${{ github.event.issue.user.login }}
          body: |
              Hi!
              This PR was created in response workflow running. 
              pom.xml updated from ${{ github.event.inputs.pomFromVersion }} to ${{ github.event.inputs.pomToVersion }}
              Jenkinsfile updated from x to y.

